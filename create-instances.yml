---
- hosts: localhost
  tasks:
  - name: Create security group for node communication
    amazon.aws.ec2_security_group:
      name: hadoop-sg
      description: sg with total access within hadoop nodes
      region: us-east-1
      rules:
        - proto: all
          group_name: hadoop-sg
        - proto: tcp
          cidr_ip: 0.0.0.0/0
          ports: 
          - 22

  - name: Start hadoop master instance
    amazon.aws.ec2_instance:
      name: "hadoop-master"
      key_name: "vockey"
      instance_type: t3.large
      security_group: hadoop-sg
      image_id: ami-051f7e7f6c2f40dc1
      region: us-east-1
      tags:
        Group: hadoop-master
      volumes:
      - device_name: /dev/xvda
        ebs:
          volume_size: 50
          delete_on_termination: true
    register: hadoop-master-values
      
  - name: Start hadoop worker instances
    amazon.aws.ec2_instance:
      name: "hadoop-worker-{{item}}"
      key_name: "vockey"
      instance_type: t3.large
      security_group: hadoop-sg
      image_id: ami-051f7e7f6c2f40dc1
      region: us-east-1
      tags:
        Group: hadoop-worker
      volumes:
      - device_name: /dev/xvda
        ebs:
          volume_size: 50
          delete_on_termination: true
    loop:
      - "1"
      - "2"
      - "3" 
    register: hadoop-worker-{{item}}-values

  - meta: refresh_inventory

- hosts: all
  tasks:
  - name: Download Hadoop
    ansible.builtin.get_url:
      url: https://dlcdn.apache.org/hadoop/common/hadoop-3.3.6/hadoop-3.3.6.tar.gz
      dest: /home/ec2-user

  - name: Extract Hadoop
    ansible.builtin.command: tar -xf /home/ec2-user/hadoop-3.3.6.tar.gz

  - name: Install Java
    ansible.builtin.command: sudo yum install -y java-1.8.0-amazon-corretto java-1.8.0-amazon-corretto-devel

  - name: Set JAVA_HOME environment variable at ~/.bashrc
    ansible.builtin.shell: echo 'export JAVA_HOME=/usr/lib/jvm/java' >> ~/.bashrc

  - name: Set HADOOP_HOME environment variable at ~/.bashrc
    ansible.builtin.shell: echo 'export HADOOP_HOME=/home/ec2-user/hadoop-3.3.6' >> ~/.bashrc

  - name: copy core-site.xml file to all hosts
    ansible.builtin.copy:
      src: core-site.xml
      dest: /home/ec2-user/hadoop-3.3.6/etc/hadoop/core-site.xml

- hosts: tag_Group_hadoop_master
  tasks:
  - name: copy hdfs-site.xml file to hadoop-master
    ansible.builtin.copy:
      src: hadoop-master/hdfs-site.xml
      dest: /home/ec2-user/hadoop-3.3.6/etc/hadoop/hdfs-site.xml

  - name: Copy workers file to hadoop-master
    ansible.builtin.copy:
      src: hadoop-master/workers
      dest: /home/ec2-user/hadoop-3.3.6/etc/hadoop/workers

  - name: Create NameNode metadata path
    ansible.builtin.file:
      path: /home/ec2-user/nn
      state: directory

  - name: Format the NameNode directory
    ansible.builtin.shell: /home/ec2-user/hadoop-3.3.6/bin/hdfs namenode -format -force

  - name: Copy namenode.service file to hadoop-master
    become: true
    ansible.builtin.copy:
      src: hadoop-master/namenode.service
      dest: /etc/systemd/system/namenode.service

  - name: Start NameNode
    become: true
    ansible.builtin.shell: systemctl start namenode

  - name: Set the service to start at init
    become: true
    ansible.builtin.shell: systemctl enable namenode

- hosts: tag_Group_hadoop_worker
  tasks:
  - name: copy hdfs-site.xml file to hadoop-worker nodes
    ansible.builtin.copy:
      src: hadoop-worker/hdfs-site.xml
      dest: /home/ec2-user/hadoop-3.3.6/etc/hadoop/hdfs-site.xml
  
  - name: Create DataNode directory
    ansible.builtin.file:
      path: /home/ec2-user/dn
      state: directory

  - name: Copy datanode.service file to hadoop-worker
    become: true
    ansible.builtin.copy:
      src: hadoop-worker/datanode.service
      dest: /etc/systemd/system/datanode.service

  - name: Start DataNode
    become: true
    ansible.builtin.shell: systemctl start datanode

  - name: Set the service to start at init
    become: true
    ansible.builtin.shell: systemctl enable datanode